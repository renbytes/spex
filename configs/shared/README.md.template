# {{ spec.analysis_type }}

{{ spec.description }}

## Overview

This project was automatically generated using the `spex` tool. It contains a complete, tested data science pipeline with modern Python tooling and best practices.

## Project Structure

```
{{ project_name }}/
├── {{ main_files }}
├── data/
│   ├── raw/                 # Input data files
│   ├── processed/           # Cleaned and transformed data
│   └── external/            # Reference data
├── outputs/
│   ├── reports/             # Generated reports (HTML, PDF)
│   ├── visualizations/      # Charts and plots
│   └── models/              # Saved models or analysis results
├── notebooks/               # Jupyter notebooks for exploration
├── tests/                   # Unit and integration tests
├── logs/                    # Application logs
└── scripts/                 # Utility scripts
```

## Getting Started

{{ setup_instructions }}

{{ run_instructions }}

## Modern Python Features

This project uses modern Python development practices:

- **📦 pyproject.toml**: Modern Python project configuration
- **🐍 conda environments**: Reproducible data science environments  
- **🧪 pytest**: Comprehensive testing framework
- **🎨 black**: Automatic code formatting
- **🔍 mypy**: Static type checking
- **🪝 pre-commit**: Git hooks for code quality
- **📓 Jupyter**: Interactive development and exploration

## Data Sources

{% for dataset in spec.datasets -%}
- **{{ dataset.name }}**: {{ dataset.description }}
{% endfor %}

## Metrics Calculated

{% for metric in spec.metrics -%}
- **{{ metric.name }}**: {{ metric.logic }}
{% endfor %}

## Development Workflow

```bash
# Format and lint code
make format lint

# Run tests
make test

# Quick development checks
make quick-test

# Clean up generated files
make clean
```

## Generated on

{{ timestamp }}

## Next Steps

1. **📁 Add ourdata**: Place data files in `data/raw/`
2. **⚙️ Configure**: Update paths in configuration files if needed
3. **🏃 Run analysis**: Execute `make run` to generate insights
4. **📊 Check results**: Review outputs in `outputs/` directory
5. **🎨 Customize**: Modify visualizations and reports as needed
6. **🧪 Test**: Add ourown tests in the `tests/` directory

## Troubleshooting

- **Environment issues**: Try `make clean-all && make setup`
- **Missing dependencies**: Run `make update-deps`
- **Test failures**: Check `make status` for environment info

---

*Generated by [spex](https://github.pie.apple.com/Phobos/spex) - The spec-driven data science pipeline generator*